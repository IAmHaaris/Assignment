{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Haaris\\\\Desktop\\\\MBZ\\\\src\\\\components\\\\MBZ_Assign\\\\ListTodosComponent.jsx\";\nimport React, { useState, Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\nimport JsonApiService from '../../api/SpringBoot/JsonApiService';\nimport TodoDataService from '../../api/SpringBoot/JsonApiService';\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    console.log('constructor');\n    super(props);\n\n    this.searchSpace = event => {\n      let keyword = event.target.value;\n      this.setState({\n        search: keyword\n      });\n    };\n\n    this.state = {\n      message: null,\n      value: '',\n      details: [],\n      search: null,\n      filteredData: []\n    };\n    this.handleSuccessfulResponse = this.handleSuccessfulResponse.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n\n  componentDidMount() {\n    console.log('componentDIDUnmount');\n    JsonApiService.executeJsonApiService().then(response => {\n      console.log(response);\n      this.setState({\n        details: response.data\n      });\n      this.setState({\n        filteredData: response.data\n      });\n    });\n  }\n\n  handleSuccessfulResponse(response) {\n    console.log(response);\n    this.setState({\n      welcomeMessage: response.data.message\n    });\n  }\n\n  handleError(error) {\n    console.log(error.response);\n    let errorMessage = '';\n    if (error.message) errorMessage += error.message;\n\n    if (error.response && error.response.data) {\n      errorMessage += error.response.data.message;\n    }\n\n    this.setState({\n      welcomeMessage: errorMessage\n    });\n  }\n\n  refreshTodos() {\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      console.log(response); //this.setState({ todos: response.data })\n\n      console.log(this.state.todos.userId);\n    });\n  }\n\n  render() {\n    const jsonResponseBody = this.state.filteredData.filter(data => {\n      if (this.state.search == null) return data;else if (data.title.toLowerCase().includes(this.state.search.toLowerCase())) {\n        return data;\n      }\n    }).map(data => {\n      return /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 28\n        }\n      }, data.userId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 28\n        }\n      }, data.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 28\n        }\n      }, data.title), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 28\n        }\n      }, data.body)));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 18\n      }\n    }, \"List of Posts\"), \"Filter Data as per Title:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter item \",\n      onChange: e => this.searchSpace(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"tableHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 30\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 30\n      }\n    }, \"UserId\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 30\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 30\n      }\n    }, \"Description\"))), jsonResponseBody));\n  }\n\n}\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["C:/Users/Haaris/Desktop/MBZ/src/components/MBZ_Assign/ListTodosComponent.jsx"],"names":["React","useState","Component","AuthenticationService","JsonApiService","TodoDataService","ListTodosComponent","constructor","props","console","log","searchSpace","event","keyword","target","value","setState","search","state","message","details","filteredData","handleSuccessfulResponse","bind","handleError","componentWillUnmount","componentDidMount","executeJsonApiService","then","response","data","welcomeMessage","error","errorMessage","refreshTodos","username","getLoggedInUserName","retrieveAllTodos","todos","userId","render","jsonResponseBody","filter","title","toLowerCase","includes","map","id","body","e"],"mappings":"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","sourcesContent":["import React, { useState,Component } from 'react'\nimport AuthenticationService from './AuthenticationService.js'\nimport JsonApiService from '../../api/SpringBoot/JsonApiService'\nimport TodoDataService from '../../api/SpringBoot/JsonApiService'\nclass ListTodosComponent extends Component {\n    \n    constructor(props) {\n        \n        console.log('constructor')\n        super(props)\n        \n        this.state = {\n            message: null,\n            value: '',\n            details:[],\n            search:null,\n            filteredData:[]\n        }\n        this.handleSuccessfulResponse = this.handleSuccessfulResponse.bind(this)\n        this.handleError = this.handleError.bind(this)\n    }\n\n    componentWillUnmount() {\n        console.log('componentWillUnmount')\n    }\n    componentDidMount(){\n        \n        console.log('componentDIDUnmount')\n        \n        JsonApiService.executeJsonApiService()\n        .then(response=>{\n            console.log(response)\n            this.setState({details:response.data})\n            this.setState({filteredData:response.data})\n             \n        })\n      \n    }\n    \n    searchSpace=(event)=>{\n        let keyword = event.target.value;\n        \n        this.setState({search:keyword})\n        \n      }\n    \n    handleSuccessfulResponse(response) {\n        console.log(response)\n        this.setState({ welcomeMessage: response.data.message })\n    }\n    handleError(error) {\n\n        console.log(error.response)\n\n        let errorMessage = '';\n\n        if (error.message)\n            errorMessage += error.message\n\n        if (error.response && error.response.data) {\n            errorMessage += error.response.data.message\n        }\n\n        this.setState({ welcomeMessage: errorMessage })\n    }\n    refreshTodos() {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.retrieveAllTodos(username)\n            .then(\n                response => {\n                    console.log(response);\n                    //this.setState({ todos: response.data })\n                    console.log(this.state.todos.userId)\n                }\n            )\n    }\n    render(){\n        const jsonResponseBody = this.state.filteredData.filter((data)=>{\n            if(this.state.search == null)\n           \n                return data\n        \n            else if(data.title.toLowerCase().includes(this.state.search.toLowerCase())){\n                return data\n            }\n          }).map(data=>{\n            return(\n                <tbody>\n                {\n                   \n                       <tr>\n                           <td>{data.userId}</td>\n                           <td>{data.id}</td>\n                           <td>{data.title}</td>\n                           <td>{data.body}</td>\n                       </tr>\n                    \n                \n               }\n               \n            </tbody>\n            \n            )\n          })\n         return(\n             <div>\n                 <h3>List of Posts</h3>\n                 Filter Data as per Title:<input type=\"text\" placeholder=\"Enter item \"  onChange={(e)=>this.searchSpace(e)} />\n                \n                 <table className=\"table\">\n                     <thead className=\"tableHeader\">\n                         <tr>\n                             <th>No</th>\n                             <th>UserId</th>\n                             <th>Title</th>\n                             <th>Description</th>\n                         </tr>\n                     </thead>\n                     {jsonResponseBody}\n                 </table>\n             </div>\n         )\n    }\n}\n\nexport default ListTodosComponent"]},"metadata":{},"sourceType":"module"}