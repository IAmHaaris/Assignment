{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Haaris\\\\Desktop\\\\MBZ\\\\src\\\\components\\\\todo\\\\LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\nimport { Card, CardImg, CardImgOverlay, CardTitle, CardText } from \"reactstrap\";\nimport { Redirect } from 'react-router-dom';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    }; // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n    // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    //console.log(this.state);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    //this.props.history.push(`/welcome/:${this.state.username}`);\n    // if(this.state.username=='admin' && this.state.password=='admin')\n    // {\n    //     console.log(\"Login clicked\")\n    //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n    //     //this.props.history.push(`/List/:${this.state.username}`);\n    //     this.props.history.push(`/List`);\n    //    //this.props.history.push('/todos/');\n    //     console.log(\"Login clicked\"+this.state.username);\n    //     //in28minutes,dummy\n    // } \n    AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(response => {\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n      this.props.history.push(`/List`);\n    }).catch(() => {\n      this.props.history.push(`/List`);\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    this.state.hasLoginFailed = false;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      className: \" bg-dark text-white border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      alt: \"...\" //src=\"https://demos.creative-tim.com/argon-dashboard-pro/assets/img/theme/img-1-1000x600.jpg\"\n      ,\n      src: require('../../images/mc.jpg'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardImgOverlay, {\n      className: \" d-flex align-items-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, this.state.hasLoginFailed && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 51\n      }\n    }, \"Invalid Credentials\"), this.state.showSuccessMessage && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 55\n      }\n    }, \"Login Sucessful\"), \"User Name: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 32\n      }\n    }), \"Password: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.loginClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Login\"))))));\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["C:/Users/Haaris/Desktop/MBZ/src/components/todo/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","Card","CardImg","CardImgOverlay","CardTitle","CardText","Redirect","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","history","push","catch","render","require"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthenticationService from './AuthenticationService.js'\nimport { Card, CardImg, CardImgOverlay, CardTitle, CardText } from \"reactstrap\";\nimport {Redirect} from 'react-router-dom';\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n \n        this.state = {\n            username: '',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n        // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n        // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        //console.log(this.state);\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    \n\n    loginClicked() {\n        //this.props.history.push(`/welcome/:${this.state.username}`);\n        // if(this.state.username=='admin' && this.state.password=='admin')\n        // {\n        //     console.log(\"Login clicked\")\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n            \n        //     //this.props.history.push(`/List/:${this.state.username}`);\n        //     this.props.history.push(`/List`);\n             \n        //    //this.props.history.push('/todos/');\n           \n        //     console.log(\"Login clicked\"+this.state.username);\n        //     //in28minutes,dummy\n        // } \n        \n         \n        \n        AuthenticationService\n            .executeJwtAuthenticationService(this.state.username, this.state.password)\n            .then((response) => {\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                this.props.history.push(`/List`);\n            }).catch(() => {\n                this.props.history.push(`/List`);\n                this.setState({ showSuccessMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n\n    }\n\n    render() {\n        this.state.hasLoginFailed=false\n        return (\n            <>\n             <Card className=\" bg-dark text-white border-0\">\n        <CardImg\n          alt=\"...\"\n          //src=\"https://demos.creative-tim.com/argon-dashboard-pro/assets/img/theme/img-1-1000x600.jpg\"\n          src={require('../../images/mc.jpg')}\n        ></CardImg>\n        <CardImgOverlay className=\" d-flex align-items-top\">\n          <div>\n          <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                \n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            \n          </div>\n        </CardImgOverlay>\n      </Card>\n            \n            </>\n        )\n    }\n}\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}